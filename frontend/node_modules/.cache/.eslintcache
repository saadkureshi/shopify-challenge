[{"/Users/saadkureshi/lighthouse/shopify-challenge/frontend/src/index.js":"1","/Users/saadkureshi/lighthouse/shopify-challenge/frontend/src/reportWebVitals.js":"2","/Users/saadkureshi/lighthouse/shopify-challenge/frontend/src/App.js":"3","/Users/saadkureshi/lighthouse/shopify-challenge/frontend/src/components/Login.jsx":"4","/Users/saadkureshi/lighthouse/shopify-challenge/frontend/src/components/NavigationBar.jsx":"5","/Users/saadkureshi/lighthouse/shopify-challenge/frontend/src/components/Register.jsx":"6","/Users/saadkureshi/lighthouse/shopify-challenge/frontend/src/components/FileUpload.jsx":"7","/Users/saadkureshi/lighthouse/shopify-challenge/frontend/src/components/Feed.jsx":"8","/Users/saadkureshi/lighthouse/shopify-challenge/frontend/src/components/Profile.jsx":"9"},{"size":500,"mtime":1632624040406,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1632595242190,"results":"12","hashOfConfig":"11"},{"size":1533,"mtime":1632769933118,"results":"13","hashOfConfig":"11"},{"size":2786,"mtime":1632706445918,"results":"14","hashOfConfig":"11"},{"size":1313,"mtime":1632754497647,"results":"15","hashOfConfig":"11"},{"size":3029,"mtime":1632685023761,"results":"16","hashOfConfig":"11"},{"size":1706,"mtime":1632768903770,"results":"17","hashOfConfig":"11"},{"size":693,"mtime":1632768724499,"results":"18","hashOfConfig":"11"},{"size":1315,"mtime":1632769534407,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1jq978v",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/saadkureshi/lighthouse/shopify-challenge/frontend/src/index.js",[],["41","42"],"/Users/saadkureshi/lighthouse/shopify-challenge/frontend/src/reportWebVitals.js",[],"/Users/saadkureshi/lighthouse/shopify-challenge/frontend/src/App.js",["43","44"],"/Users/saadkureshi/lighthouse/shopify-challenge/frontend/src/components/Login.jsx",["45"],"import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport './Login.css';\n\nfunction Login() {\n\n  const [loginFormInput, setLoginFormInput] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const [currentUser, setCurrentUser] = useState(null);\n  const [incorrectLogin, setIncorrectLogin] = useState(false);\n\n  const history = useHistory();\n\n  const onSubmitLoginForm = async e => {\n    e.preventDefault();\n    if (loginFormInput.email === \"\" || loginFormInput.password === \"\"){\n      setIncorrectLogin(true);\n      return;\n    }\n    try {\n      const body = { email: loginFormInput.email, password: loginFormInput.password };\n      const response = await fetch(\"http://localhost:5000/login\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body)\n      });\n      const responseBody = await response.json();\n      console.log(\"responseBody is \", typeof responseBody);\n      if (responseBody.email){\n        setCurrentUser(responseBody.email);\n        setIncorrectLogin(false);\n        localStorage.setItem('user_details', JSON.stringify(responseBody));\n        history.push(\"/\");\n        history.go(0);\n      } else {\n        setIncorrectLogin(true);\n      }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <div className=\"login\">\n      <Form>\n        <h2 className=\"login-heading\">Login</h2>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control \n            type=\"email\" \n            placeholder=\"Enter email\" \n            value={loginFormInput.email}\n            onChange={e => {\n              setLoginFormInput({\n                ...loginFormInput,\n                email: e.target.value\n              })\n            }}\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control \n            type=\"password\" \n            placeholder=\"Password\" \n            value={loginFormInput.password}\n            onChange={e => {\n              setLoginFormInput({\n                ...loginFormInput,\n                password: e.target.value\n              })\n            }}\n          />\n        </Form.Group>\n        <Button \n          variant=\"primary\" \n          type=\"submit\"\n          onClick={e => onSubmitLoginForm(e)}\n        >\n          Submit\n        </Button>\n        {incorrectLogin && \n          <Alert variant=\"danger\" className=\"incorrect-credentials\">\n            Incorrect username or password. Please try again.\n          </Alert>\n        }\n      </Form>\n    </div>\n  )\n}\n\nexport default Login;\n","/Users/saadkureshi/lighthouse/shopify-challenge/frontend/src/components/NavigationBar.jsx",["46"],"import React from 'react';\nimport { Navbar, Nav, NavDropdown, Container } from 'react-bootstrap';\nimport './NavigationBar.css';\n\nfunction NavigationBar() {\n\n  const userLoggedIn = localStorage.getItem(\"user_details\");\n\n  let userEmail = \"\";\n  if (userLoggedIn){\n    userEmail = (localStorage.getItem(\"user_details\") && JSON.parse(localStorage.getItem(\"user_details\"))?.email);\n  }\n\n  return (\n    <div className=\"navigation-bar\">\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Container>\n        <Navbar.Brand href=\"/\">Image Repository</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"me-auto\">\n            <Nav.Link href=\"/feed\">Feed</Nav.Link>\n            <Nav.Link href=\"/profile\">Profile</Nav.Link>\n          </Nav>\n          {userLoggedIn ? \n            <Nav>\n              <Nav.Link href=\"#\">Welcome, {userEmail}</Nav.Link>\n              <Nav.Link href=\"/\" onClick={() => localStorage.clear()}>Logout</Nav.Link>\n            </Nav>\n            :\n            <Nav>\n            <Nav.Link href=\"#\">Join today for free!</Nav.Link>\n          </Nav>\n          }\n        </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </div>\n  )\n}\n\nexport default NavigationBar;\n","/Users/saadkureshi/lighthouse/shopify-challenge/frontend/src/components/Register.jsx",[],"/Users/saadkureshi/lighthouse/shopify-challenge/frontend/src/components/FileUpload.jsx",["47","48","49","50","51"],"/Users/saadkureshi/lighthouse/shopify-challenge/frontend/src/components/Feed.jsx",[],"/Users/saadkureshi/lighthouse/shopify-challenge/frontend/src/components/Profile.jsx",["52","53"],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":18,"column":7,"nodeType":"60","messageId":"61","endLine":18,"endColumn":20},{"ruleId":"58","severity":1,"message":"62","line":19,"column":7,"nodeType":"60","messageId":"61","endLine":19,"endColumn":23},{"ruleId":"58","severity":1,"message":"63","line":13,"column":10,"nodeType":"60","messageId":"61","endLine":13,"endColumn":21},{"ruleId":"58","severity":1,"message":"64","line":2,"column":23,"nodeType":"60","messageId":"61","endLine":2,"endColumn":34},{"ruleId":"58","severity":1,"message":"63","line":8,"column":7,"nodeType":"60","messageId":"61","endLine":8,"endColumn":18},{"ruleId":"58","severity":1,"message":"62","line":10,"column":7,"nodeType":"60","messageId":"61","endLine":10,"endColumn":23},{"ruleId":"58","severity":1,"message":"65","line":12,"column":9,"nodeType":"60","messageId":"61","endLine":12,"endColumn":16},{"ruleId":"58","severity":1,"message":"66","line":15,"column":10,"nodeType":"60","messageId":"61","endLine":15,"endColumn":24},{"ruleId":"58","severity":1,"message":"67","line":15,"column":26,"nodeType":"60","messageId":"61","endLine":15,"endColumn":43},{"ruleId":"58","severity":1,"message":"63","line":10,"column":7,"nodeType":"60","messageId":"61","endLine":10,"endColumn":18},{"ruleId":"68","severity":1,"message":"69","line":22,"column":6,"nodeType":"70","endLine":22,"endColumn":8,"suggestions":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'currentUserId' is assigned a value but never used.","Identifier","unusedVar","'currentUserEmail' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'NavDropdown' is defined but never used.","'history' is assigned a value but never used.","'uploadedImages' is assigned a value but never used.","'setUploadedImages' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUserId'. Either include it or remove the dependency array.","ArrayExpression",["74"],"no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},"Update the dependencies array to be: [currentUserId]",{"range":"77","text":"78"},[637,639],"[currentUserId]"]